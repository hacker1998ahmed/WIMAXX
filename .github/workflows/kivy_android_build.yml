# ==============================================================================
# GitHub Actions Workflow for WiFi Security Tester (Kivy/Buildozer)
# ==============================================================================
#
# الوصف:
# يقوم هذا الـ Workflow بأتمتة عملية بناء تطبيق الأندرويد (APK) لمشروعنا
# باستخدام Buildozer. يركز على الاستقرار وتحسين استخدام الموارد.
#
# ==============================================================================

name: Build Android APK for WiFi Tester

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-android-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: List files in the repository root
        run: |
          echo "Listing files in the current directory:"
          ls -la

      # ✅ حل مشكلة "No space left on device"
      # تقليل حجم الـ Swap المطلوب ليتناسب مع مساحة القرص المتاحة في GitHub Actions
      - name: Increase Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 6 # تم تغيير هذا من 10 إلى 6 جيجابايت

      - name: Set up Java JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Buildozer and Pip packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
            ~/.pip
          key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Install system dependencies (including build tools)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            build-essential \
            git \
            autoconf \
            automake \
            libtool \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            expect # لـ `yes` command
          sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/*

      - name: Install Python dependencies (Buildozer & Project libs)
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install "cython<3.0" # تثبيت Cython 0.29.x
          python3 -m pip install buildozer
          
          # إنشاء ملف requirements.txt إذا لم يكن موجودًا (وبالتنسيق الصحيح)
          if [ ! -f requirements.txt ]; then
            echo "hostpython3" > requirements.txt # إضافة hostpython3 هنا
            echo "kivy" >> requirements.txt
            echo "kivymd" >> requirements.txt
            echo "pyjnius" >> requirements.txt
            echo "plyer" >> requirements.txt
            echo "https://github.com/kivy-garden/graph/archive/master.zip" >> requirements.txt
          fi
          
          python3 -m pip install -r requirements.txt

      - name: Prepare buildozer.spec for CI environment
        run: |
          # زيادة مستوى السجل للحصول على تفاصيل debugging كاملة
          sed -i 's/^log_level = .*$/log_level = 2/' buildozer.spec
          # تعطيل تنبيهات root (لتجنب التوقف غير الضروري)
          sed -i 's/^warn_on_root = .*$/warn_on_root = 0/' buildozer.spec
          # تحديث سطر requirements في buildozer.spec للتأكد من احتوائه على hostpython3
          # (هذا السطر يحل محل سطر requirements بالكامل)
          sed -i 's/^requirements = .*$/requirements = hostpython3,kivy,kivymd,pyjnius,plyer,https:\/\/github.com\/kivy-garden\/graph\/archive\/master.zip/' buildozer.spec
          # تعيين رقم الإصدار ورقم البناء من متغيرات GitHub Actions
          sed -i "s/^version = .*$/version = ${{ github.run_number }}/" buildozer.spec
          sed -i "s/^android.versioncode = .*$/android.versioncode = ${{ github.run_number }}/" buildozer.spec
          echo "--- buildozer.spec final state ---"
          cat buildozer.spec
          echo "----------------------------------"

      - name: Build APK with Buildozer (auto-accept licenses)
        run: |
          # استخدام 'yes' لتجاوز طلبات التراخيص التفاعلية
          yes | buildozer android debug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WiFi-Tester-APK
          path: bin/*.apk
          if-no-files-found: error
